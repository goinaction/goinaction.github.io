[{"id":0,"href":"/software/editors/","title":"IDEs and Editors","parent":"Software","content":"In order to write source code, you need something to type it into. You can of course use any text editor for this, but we highly recommend an Integrated Development Environment, or at least a pluggable text editor designed with writing code in mind.\nIDEs An Integrated Development Environment (\u0026ldquo;IDE\u0026rdquo;) is a program that provides a comprehensive environment for writing code. The line between IDE and Code editor can sometimes get a little blurry, but generally IDEs provide a richer, more dedicated experience with features such as integrated, graphical debugging, test annotations, and integrated terminals.\nVisual Studio Code Homepage Download the Go Extension Visual Studio Code (VSCode) is a powerful free cross-platform IDE based on Electron. It has excellent Go support, thanks to a Go extension maintained by the Go team at Google. It is our primary recommendation since it is both feature-rich and free. Setup guided video coming soon\nInstall VSCode from thw download link above. Download and install the Go extension. (optional) Create a folder such as home/workspaces or Documents/code to serve as a home base for all of your code projects, which are called \u0026ldquo;Workspaces\u0026rdquo; in VSCode parlance. This can be helpful in keeping everything together, but you can also create workspaces wherever you like. Open VSCode and, navigate to File ⇒ Add Folder To Workspace\u0026hellip;. Navigate to wherever you\u0026rsquo;d like to store your first workspace directory, but don\u0026rsquo;t click the Add button yet. If you added a special folder in step #3, this is where you\u0026rsquo;d start. Once you\u0026rsquo;ve selected a location for the new Workspace, click New Folder and create a folder called goinaction . Click Add button to add the folder to your new, unnamed workspace. Click File ⇒ Save Workspace As\u0026hellip; and accept the default name, which should be something like goinaction.code-workspace Open the \u0026ldquo;command palette\u0026rdquo;, which is VSCode\u0026rsquo;s general-purpose autocompleting shortcut menu with ⌘-shift-p or -shift-p Type go mod , which will select the Go: Initialize go mod option and hit Enter Enter goinaction when prompted. Finally, save the new go.mod file. Now you are in a fresh new Workspace and ready to follow along with the book. You can create a new folder for each exercise from the file explorer menu to the left and add main.go files for each one.\nGoland TBD\nCode Editors Sublime Text TBD\n","description":"In order to write source code, you need something to type it into. You can of course use any text editor for this, but we highly recommend an Integrated Development Environment, or at least a pluggable text editor designed with writing code in mind.\nIDEs An Integrated Development Environment (\u0026ldquo;IDE\u0026rdquo;) is a program that provides a comprehensive environment for writing code. The line between IDE and Code editor can sometimes get a little blurry, but generally IDEs provide a richer, more dedicated experience with features such as integrated, graphical debugging, test annotations, and integrated terminals."},{"id":1,"href":"/software/terminals/","title":"Terminal Emulators","parent":"Software","content":"Terminal emulators, are so-called because they \u0026ldquo;emulate\u0026rdquo; the experience of using a terminal interface, whether or not your sustem has one built in. But, really, they are often much more than that, and some of them provide a lot of sophisticated functionality to make the experience flexible, powerful and convenient.\nThe following is a (far from exhaustive) list of some popular terminal emulators you might want to consider when doing work on the command line.\nTerminal Emulators for Windows Windows Terminal The official MS Terminal app is actually pretty good! Definitely the best place to start if you\u0026rsquo;re unfamiliar. Cmder - A well-designed app by a terminal enthusiast. Fully featured and portable with Linux commands integrated into the bundled \u0026ldquo;Git For Windows\u0026rdquo;, which also comes with Git, so there\u0026rsquo;s that! MobaXterm - If you\u0026rsquo;re looking for batteries-included, this is it, but it might be a little much for most users. You can also enable WSL if you\u0026rsquo;re feeling a bit more adventurous. This will enable to to run a Linux environment alongside Windows.\nTerminal Emulators for macOS iTerm2 - The classic is still the best. You can\u0026rsquo;t go wrong with iTerm2. It\u0026rsquo;s what I use every day. Alacritty - Very fast, if that matters to you, thanks to its OpenGL rendering engine. Configuration is done with text files though, and you\u0026rsquo;ll have to locate them on disk, so it\u0026rsquo;s not nearly as easy to get set up as iTerm2. Works on Linux, too. Warp - The new kid on the block, but this is definitely some next-level stuff with advanced views, graphical integration, multi cursors, and the lot. Just make sure you read the privacy statements and opt-out of telemetry if you\u0026rsquo;re concerned about it. Terminal Emulators for Linux Let\u0026rsquo;s be honest, you probably know what you\u0026rsquo;re doing when it comes to terminal emulators, but here are some options anyways.\nKitty - Like Alacritty, it\u0026rsquo;s a hardware-accelerated terminal. Also like Alacritty, you will need to configure it with text, but at least the config file is well-documented and easy to access. Alacritty also works on Linux Foot - Fast and featureful with commandline graphics, thanks to libsixel. Also application integration for things like loading links in the browser for you, if you want. ","description":"Terminal emulators, are so-called because they \u0026ldquo;emulate\u0026rdquo; the experience of using a terminal interface, whether or not your sustem has one built in. But, really, they are often much more than that, and some of them provide a lot of sophisticated functionality to make the experience flexible, powerful and convenient.\nThe following is a (far from exhaustive) list of some popular terminal emulators you might want to consider when doing work on the command line."},{"id":2,"href":"/software/git/","title":"Git","parent":"Software","content":"Git Homepage\nGit is a source control management tool, which allows people to collaborate on software development. It is used internally by the Go tool for downloading dependencies and other tools. Depending on the other software you install from this list, you may find that it is installed for you automatically, but if you need it, this is the place to go.\n","description":"Git Homepage\nGit is a source control management tool, which allows people to collaborate on software development. It is used internally by the Go tool for downloading dependencies and other tools. Depending on the other software you install from this list, you may find that it is installed for you automatically, but if you need it, this is the place to go."},{"id":3,"href":"/","title":"Home","parent":"","content":" Hello, Gophers! Welcome to the web page for Go In Action, 2nd Edition from Manning Publications. We\u0026rsquo;re just getting this thing spun up, so stay tuned!\nIn the meantime, the source can be found here: https://github.com/flowchartsman/go-in-action\nAnd be sure to check out the section on Software\n","description":"Hello, Gophers! Welcome to the web page for Go In Action, 2nd Edition from Manning Publications. We\u0026rsquo;re just getting this thing spun up, so stay tuned!\nIn the meantime, the source can be found here: https://github.com/flowchartsman/go-in-action\nAnd be sure to check out the section on Software"},{"id":4,"href":"/software/","title":"Software","parent":"Home","content":"","description":""},{"id":5,"href":"/tags/","title":"Tags","parent":"Home","content":"","description":""}]